{
  "project_info": {
    "name": "Pharmacy Management System",
    "type": "Django E-commerce Web Application",
    "version": "1.0.0",
    "description": "Complete pharmacy management system with e-commerce functionality, admin panel, and Docker deployment",
    "tech_stack": {
      "backend": "Django 5.2.3",
      "frontend": "HTML5, CSS3, JavaScript, Bootstrap 5.3.0",
      "database": "PostgreSQL 15",
      "containerization": "Docker & Docker Compose",
      "image_handling": "Pillow 10.0.0"
    }
  },
  
  "project_structure": {
    "root_directory": "pharmacy_project/",
    "main_app": "pharmacy/",
    "key_files": {
      "settings": "pharmacy_project/settings.py",
      "main_urls": "pharmacy_project/urls.py",
      "app_urls": "pharmacy/urls.py",
      "models": "pharmacy/models.py",
      "views": "pharmacy/views.py",
      "admin": "pharmacy/admin.py",
      "docker_compose": "docker-compose.yml",
      "dockerfile": "Dockerfile",
      "requirements": "requirements.txt"
    },
    "templates_directory": "pharmacy/templates/pharmacy/",
    "static_directory": "pharmacy/static/pharmacy/",
    "media_directory": "media/"
  },

  "database_models": {
    "Category": {
      "fields": ["name", "description", "image", "slug"],
      "purpose": "Product categorization"
    },
    "Brand": {
      "fields": ["name", "description", "logo"],
      "purpose": "Product brand management"
    },
    "Manufacturer": {
      "fields": ["name", "description", "logo"],
      "purpose": "Product manufacturer tracking"
    },
    "Product": {
      "fields": ["name", "description", "price", "category", "brand", "manufacturer", "image", "stock_quantity", "prescription_required", "expiry_date", "slug", "is_featured", "discount_percentage"],
      "purpose": "Main product catalog"
    },
    "Doctor": {
      "fields": ["name", "specialization", "experience", "contact", "email", "photo"],
      "purpose": "Doctor profiles for consultation"
    },
    "Customer": {
      "fields": ["user", "phone", "address", "date_of_birth"],
      "purpose": "Customer profile extension"
    },
    "Order": {
      "fields": ["customer", "total_amount", "status", "created_at", "shipping_address", "billing_address", "payment_method", "coupon", "discount_amount"],
      "purpose": "Order management"
    },
    "OrderItem": {
      "fields": ["order", "product", "quantity", "price"],
      "purpose": "Individual order items"
    },
    "Wishlist": {
      "fields": ["customer", "product", "added_at"],
      "purpose": "Customer wishlist functionality"
    },
    "Coupon": {
      "fields": ["code", "discount_type", "discount_value", "min_order_amount", "max_discount", "valid_from", "valid_to", "usage_limit", "used_count", "is_active"],
      "purpose": "Discount coupon system"
    },
    "PaymentMethod": {
      "fields": ["name", "description", "is_active"],
      "purpose": "Payment options management"
    },
    "Review": {
      "fields": ["product", "customer", "rating", "comment", "created_at"],
      "purpose": "Product reviews and ratings"
    },
    "OrderStatus": {
      "fields": ["name", "description"],
      "purpose": "Order status tracking"
    },
    "Notification": {
      "fields": ["customer", "title", "message", "is_read", "created_at"],
      "purpose": "Customer notifications"
    }
  },

  "key_features": {
    "authentication": {
      "description": "Combined login/register system with toggle functionality",
      "files": ["auth.html", "views.py"],
      "functionality": ["User registration", "Login", "Logout", "Profile management"]
    },
    "product_catalog": {
      "description": "Complete product management with categories, brands, and search",
      "files": ["models.py", "views.py", "home.html"],
      "functionality": ["Product listing", "Category filtering", "Advanced search", "Featured products"]
    },
    "e_commerce": {
      "description": "Full e-commerce functionality",
      "files": ["views.py", "checkout.html", "wishlist.html"],
      "functionality": ["Shopping cart", "Wishlist", "Checkout process", "Order management", "Coupon system"]
    },
    "admin_panel": {
      "description": "Comprehensive admin interface",
      "files": ["admin.py"],
      "functionality": ["Product management", "Order tracking", "Customer management", "Coupon management", "Doctor profiles"]
    },
    "responsive_design": {
      "description": "Cross-browser compatible responsive design",
      "files": ["base.html", "Bootstrap 5.3.0"],
      "functionality": ["Mobile-first design", "Cross-browser compatibility", "Touch-friendly interface"]
    }
  },

  "templates_structure": {
    "base.html": {
      "purpose": "Main template with navigation, footer, and responsive design",
      "includes": ["Bootstrap 5.3.0", "Custom CSS", "JavaScript", "Cross-browser compatibility"]
    },
    "home.html": {
      "purpose": "Homepage with search, categories, statistics, testimonials",
      "sections": ["Hero banner", "Search bar", "Category cards", "Statistics", "Health tips", "Emergency contact"]
    },
    "auth.html": {
      "purpose": "Combined login/register page with toggle functionality",
      "features": ["Form validation", "Toggle between login/register", "Redirect handling"]
    },
    "checkout.html": {
      "purpose": "Enhanced checkout process",
      "features": ["Address forms", "Payment methods", "Coupon application", "Order summary"]
    },
    "wishlist.html": {
      "purpose": "User wishlist management",
      "features": ["Add/remove items", "Move to cart", "Product details"]
    },
    "advanced_search.html": {
      "purpose": "Advanced product search with filters",
      "features": ["Category filter", "Price range", "Brand filter", "Sorting options"]
    }
  },

  "docker_setup": {
    "dockerfile": {
      "base_image": "python:3.11-slim",
      "working_directory": "/app",
      "exposed_port": "8000",
      "commands": ["pip install requirements", "collectstatic", "migrate", "runserver"]
    },
    "docker_compose": {
      "services": {
        "web": {
          "build": ".",
          "ports": "8000:8000",
          "volumes": ["app volume", "media volume"],
          "depends_on": "db"
        },
        "db": {
          "image": "postgres:15",
          "environment": ["POSTGRES_DB=pharmacy_db", "POSTGRES_USER=pharmacy_user", "POSTGRES_PASSWORD=pharmacy_pass"],
          "volumes": "postgres_data"
        }
      }
    }
  },

  "url_patterns": {
    "main_urls": [
      "admin/",
      "pharmacy/"
    ],
    "app_urls": [
      "'' -> home",
      "products/ -> product_list",
      "product/<slug>/ -> product_detail",
      "auth/ -> auth_view",
      "register/ -> register",
      "login/ -> login_view",
      "logout/ -> logout_view",
      "checkout/ -> checkout",
      "wishlist/ -> wishlist",
      "add-to-wishlist/<int:product_id>/ -> add_to_wishlist",
      "remove-from-wishlist/<int:product_id>/ -> remove_from_wishlist",
      "advanced-search/ -> advanced_search",
      "apply-coupon/ -> apply_coupon",
      "newsletter-signup/ -> newsletter_signup"
    ]
  },

  "css_framework": {
    "bootstrap": "5.3.0",
    "custom_css": {
      "cross_browser_compatibility": true,
      "responsive_breakpoints": ["xs: <576px", "sm: ≥576px", "md: ≥768px", "lg: ≥992px", "xl: ≥1200px", "xxl: ≥1400px"],
      "components": ["Navigation", "Footer", "Cards", "Forms", "Buttons", "Modals"]
    }
  },

  "deployment_instructions": {
    "local_development": [
      "1. Clone repository",
      "2. Install Python 3.11+",
      "3. pip install -r requirements.txt",
      "4. python manage.py migrate",
      "5. python manage.py createsuperuser",
      "6. python manage.py runserver"
    ],
    "docker_deployment": [
      "1. Install Docker and Docker Compose",
      "2. Run: docker-compose up --build",
      "3. Access: http://localhost:8000",
      "4. Admin: http://localhost:8000/admin"
    ],
    "production_considerations": [
      "Set DEBUG=False",
      "Configure ALLOWED_HOSTS",
      "Use environment variables for secrets",
      "Set up SSL/HTTPS",
      "Configure static file serving",
      "Set up backup for PostgreSQL"
    ]
  },

  "database_migrations": {
    "required_migrations": [
      "0001_initial.py - Initial models",
      "0002_add_slug_fields.py - Add slug fields to Category and Product",
      "0003_add_brand_manufacturer.py - Add Brand and Manufacturer models",
      "0004_add_product_fields.py - Add additional Product fields",
      "0005_add_ecommerce_models.py - Add Wishlist, Coupon, PaymentMethod, etc.",
      "0006_add_doctor_photo.py - Add photo field to Doctor model"
    ],
    "migration_commands": [
      "python manage.py makemigrations",
      "python manage.py migrate"
    ]
  },

  "admin_interface": {
    "customizations": [
      "Enhanced list displays with search and filters",
      "Inline editing for related models",
      "Custom admin actions",
      "Image preview functionality",
      "Bulk operations support"
    ],
    "registered_models": [
      "Category", "Brand", "Manufacturer", "Product", "Doctor", "Customer", 
      "Order", "OrderItem", "Wishlist", "Coupon", "PaymentMethod", "Review", 
      "OrderStatus", "Notification"
    ]
  },

  "security_features": {
    "authentication": "Django built-in authentication system",
    "csrf_protection": "CSRF tokens in all forms",
    "sql_injection_prevention": "Django ORM",
    "xss_protection": "Template auto-escaping",
    "secure_headers": "Django security middleware"
  },

  "performance_optimizations": {
    "database": ["Proper indexing", "Foreign key relationships", "Query optimization"],
    "static_files": ["Collectstatic for production", "Media file handling"],
    "caching": ["Template caching ready", "Database query optimization"],
    "images": ["Pillow for image processing", "Optimized image handling"]
  },

  "testing_considerations": {
    "unit_tests": "Django TestCase framework ready",
    "integration_tests": "Full workflow testing capability",
    "browser_testing": "Cross-browser compatibility verified",
    "responsive_testing": "Mobile and desktop layouts tested"
  },

  "maintenance_tasks": {
    "regular_tasks": [
      "Database backups",
      "Log monitoring",
      "Security updates",
      "Performance monitoring",
      "User feedback review"
    ],
    "periodic_tasks": [
      "Expired product cleanup",
      "Coupon expiry management",
      "Order status updates",
      "Customer notification cleanup"
    ]
  },

  "extension_possibilities": {
    "additional_features": [
      "Real-time chat support",
      "SMS notifications",
      "Email marketing integration",
      "Analytics dashboard",
      "Mobile app API",
      "Multi-language support",
      "Advanced reporting",
      "Inventory management",
      "Supplier management",
      "Prescription upload system"
    ]
  },

  "troubleshooting_guide": {
    "common_issues": {
      "migration_errors": "Run migrations in sequence, check for missing dependencies",
      "static_files_not_loading": "Run collectstatic, check STATIC_URL settings",
      "docker_build_fails": "Check Dockerfile syntax, ensure requirements.txt exists",
      "database_connection_errors": "Verify PostgreSQL service, check connection settings",
      "admin_access_issues": "Create superuser, check admin URLs"
    }
  }
}